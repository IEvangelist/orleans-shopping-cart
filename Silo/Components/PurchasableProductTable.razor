<table class="table table-hover table-sm table-striped">
  <caption>Table of products</caption>
  <thead class="table-dark">
    <tr>
      <th scope="col"></th>
      <th scope="col">Name</th>
      <th scope="col">Description</th>
      <th scope="col">Quantity</th>
      <th scope="col">Price</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var product in Products ?? new())
    {
        <tr>
            <th scope="row">
               <button class="btn btn-sm btn-success" title="Add a @(product.Name) to your cart?"
                    @onclick=@(async _ => await AddToCartAsync((product.Id, 1)))>
                    <span class="oi oi-plus"></span>
                </button>
            </th>
            <td>@product.Name</td>
            <td>@product.Description</td>
            <td>@product.Quantity.ToString("N0")</td>
            <td>@product.UnitPrice.ToString("C2")</td>
        </tr>
    }
    </tbody>
</table>

@code {
    [Parameter]
    public HashSet<ProductDetails> Products { get; set; } = null!;

    [Parameter, EditorRequired]
    public EventCallback<(string ProductId, int Quantity)> OnAddedToCart { get; set; }

    Task AddToCartAsync((string ProductId, int Quantity) tuple) =>
        OnAddedToCart.HasDelegate
            ? OnAddedToCart.InvokeAsync(tuple)
            : Task.CompletedTask;
}