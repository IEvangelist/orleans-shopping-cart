@inject ShoppingCartService Cart

<MudNavMenu Rounded="true" Margin=Margin.Normal Class="pa-2" Color=Color.Info>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Filled.Home">Home</MudNavLink>
    <MudNavLink Href="shop" Icon="@Icons.Filled.CreditCard">Shop Inventory</MudNavLink>
    <MudNavLink Href="products" Icon="@Icons.Filled.ProductionQuantityLimits">Product Management</MudNavLink>
    <MudBadge Color=Color.Info Overlap=true Bordered=true Content=@_count Origin=Origin.CenterRight BadgeClass="ml-3">
        <MudNavLink Href="cart" Class="flex-grow-1" Icon="@Icons.Filled.ShoppingCart">Cart</MudNavLink>
    </MudBadge>
</MudNavMenu>

@code {
    int _count = 0;
    bool _collapseNavMenu = true;
    string? NavMenuCssClass => _collapseNavMenu ? "collapse" : null;
    void ToggleNavMenu() => _collapseNavMenu = !_collapseNavMenu;

    [Inject]
    public ComponentStateChangedObserver Observer { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        Observer.OnStateChanged += UpdateCountAsync;

        await UpdateCountAsync();
    }

    Task UpdateCountAsync() =>
        InvokeAsync(async () =>
        {
            _count = await Cart.GetCartCountAsync();
            StateHasChanged();
        });
}